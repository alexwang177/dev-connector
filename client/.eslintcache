[{"/Users/AlexWang1/Desktop/dev-connector/client/src/reportWebVitals.js":"1","/Users/AlexWang1/Desktop/dev-connector/client/src/App.js":"2","/Users/AlexWang1/Desktop/dev-connector/client/src/index.js":"3","/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Landing.js":"4","/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Navbar.js":"5","/Users/AlexWang1/Desktop/dev-connector/client/src/components/auth/Register.js":"6","/Users/AlexWang1/Desktop/dev-connector/client/src/components/auth/Login.js":"7","/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/index.js":"8","/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/alert.js":"9","/Users/AlexWang1/Desktop/dev-connector/client/src/store.js":"10","/Users/AlexWang1/Desktop/dev-connector/client/src/actions/types.js":"11","/Users/AlexWang1/Desktop/dev-connector/client/src/actions/alert.js":"12","/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Alert.js":"13","/Users/AlexWang1/Desktop/dev-connector/client/src/actions/auth.js":"14","/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/auth.js":"15","/Users/AlexWang1/Desktop/dev-connector/client/src/utils/setAuthToken.js":"16","/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/Dashboard.js":"17","/Users/AlexWang1/Desktop/dev-connector/client/src/components/routing/PrivateRoute.js":"18","/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/profile.js":"19","/Users/AlexWang1/Desktop/dev-connector/client/src/actions/profile.js":"20","/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Spinner.js":"21","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/CreateProfile.js":"22","/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/DashboardActions.js":"23","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/EditProfile.js":"24","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/AddExperience.js":"25","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/AddEducation.js":"26","/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/Experience.js":"27","/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/Education.js":"28"},{"size":362,"mtime":1609007257486,"results":"29","hashOfConfig":"30"},{"size":2256,"mtime":1609807806026,"results":"31","hashOfConfig":"30"},{"size":478,"mtime":1609007908574,"results":"32","hashOfConfig":"30"},{"size":1107,"mtime":1609393000955,"results":"33","hashOfConfig":"30"},{"size":1411,"mtime":1609392811149,"results":"34","hashOfConfig":"30"},{"size":2936,"mtime":1609268706091,"results":"35","hashOfConfig":"30"},{"size":1920,"mtime":1609268627825,"results":"36","hashOfConfig":"30"},{"size":189,"mtime":1609391883858,"results":"37","hashOfConfig":"30"},{"size":372,"mtime":1609112822972,"results":"38","hashOfConfig":"30"},{"size":383,"mtime":1609091561409,"results":"39","hashOfConfig":"30"},{"size":694,"mtime":1609867350866,"results":"40","hashOfConfig":"30"},{"size":339,"mtime":1609115393027,"results":"41","hashOfConfig":"30"},{"size":479,"mtime":1609114813532,"results":"42","hashOfConfig":"30"},{"size":1948,"mtime":1609394512434,"results":"43","hashOfConfig":"30"},{"size":1061,"mtime":1609822628918,"results":"44","hashOfConfig":"30"},{"size":240,"mtime":1609214042014,"results":"45","hashOfConfig":"30"},{"size":1894,"mtime":1609823182544,"results":"46","hashOfConfig":"30"},{"size":625,"mtime":1609391675150,"results":"47","hashOfConfig":"30"},{"size":990,"mtime":1609867418377,"results":"48","hashOfConfig":"30"},{"size":5391,"mtime":1609867357556,"results":"49","hashOfConfig":"30"},{"size":258,"mtime":1609393961300,"results":"50","hashOfConfig":"30"},{"size":6779,"mtime":1609447248106,"results":"51","hashOfConfig":"30"},{"size":615,"mtime":1609445825371,"results":"52","hashOfConfig":"30"},{"size":8010,"mtime":1609447242764,"results":"53","hashOfConfig":"30"},{"size":3390,"mtime":1609806405342,"results":"54","hashOfConfig":"30"},{"size":3447,"mtime":1609807943405,"results":"55","hashOfConfig":"30"},{"size":1392,"mtime":1609822809522,"results":"56","hashOfConfig":"30"},{"size":1379,"mtime":1609822934183,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1nvjok6",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/AlexWang1/Desktop/dev-connector/client/src/reportWebVitals.js",[],["122","123"],"/Users/AlexWang1/Desktop/dev-connector/client/src/App.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/index.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Landing.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Navbar.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/auth/Register.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/auth/Login.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/index.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/alert.js",["124"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/AlexWang1/Desktop/dev-connector/client/src/store.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/actions/types.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/actions/alert.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Alert.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/actions/auth.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/auth.js",["125"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","/Users/AlexWang1/Desktop/dev-connector/client/src/utils/setAuthToken.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/Dashboard.js",["126"],"import React, { useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 class=\"large text-primary\">Dashboard</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-user\"></i> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n              <i className=\"fas fa-user-minus\"></i> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","/Users/AlexWang1/Desktop/dev-connector/client/src/components/routing/PrivateRoute.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/reducers/profile.js",["127"],"/Users/AlexWang1/Desktop/dev-connector/client/src/actions/profile.js",["128"],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/layout/Spinner.js",["129"],"import React, { Fragment } from \"react\";\nimport spinner from \"./spinner.gif\";\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n      alt=\"Loading...\"\n    />\n  </Fragment>\n);\n","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/DashboardActions.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/EditProfile.js",["130"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\"\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram\n    });\n  }, [loading]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={e => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={e => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={e => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={e => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/AddExperience.js",["131","132"],"import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    title: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\"\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Add An Experience</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-code-branch\"></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        class=\"form\"\n        onSubmit={e => {\n          e.preventDefault();\n\n          addExperience(formData, history);\n        }}\n      >\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Job Title\"\n            name=\"title\"\n            value={title}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Company\"\n            name=\"company\"\n            value={company}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current Job\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n          />\n        </div>\n        <div class=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Job Description\"\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addExperience })(AddExperience);\n","/Users/AlexWang1/Desktop/dev-connector/client/src/components/profile-forms/AddEducation.js",["133","134"],"import React, { Fragment, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\"\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 class=\"large text-primary\">Add Your Education</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-code-branch\"></i> Add any school or bootcamp that you\n        have attended.\n      </p>\n      <small>* = required field</small>\n      <form\n        class=\"form\"\n        onSubmit={e => {\n          e.preventDefault();\n\n          addEducation(formData, history);\n        }}\n      >\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* School or Bootcamp\"\n            name=\"school\"\n            value={school}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Degree or Certificate\"\n            name=\"degree\"\n            value={degree}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Field of Study\"\n            name=\"fieldofstudy\"\n            value={fieldofstudy}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <h4>From Date</h4>\n          <input\n            type=\"date\"\n            name=\"from\"\n            value={from}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <div class=\"form-group\">\n          <p>\n            <input\n              type=\"checkbox\"\n              name=\"current\"\n              checked={current}\n              value={current}\n              onChange={e => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{\" \"}\n            Current Program\n          </p>\n        </div>\n        <div class=\"form-group\">\n          <h4>To Date</h4>\n          <input\n            type=\"date\"\n            name=\"to\"\n            value={to}\n            onChange={e => onChange(e)}\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\n          />\n        </div>\n        <div class=\"form-group\">\n          <textarea\n            name=\"description\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Program Description\"\n            value={description}\n            onChange={e => onChange(e)}\n          ></textarea>\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">\n          Go Back\n        </a>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addEducation })(AddEducation);\n","/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/Experience.js",[],"/Users/AlexWang1/Desktop/dev-connector/client/src/components/dashboard/Education.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":5,"column":1,"nodeType":"141","endLine":16,"endColumn":2},{"ruleId":"139","severity":1,"message":"140","line":19,"column":1,"nodeType":"141","endLine":54,"endColumn":2},{"ruleId":"142","severity":1,"message":"143","line":19,"column":6,"nodeType":"144","endLine":19,"endColumn":8,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"140","line":18,"column":1,"nodeType":"141","endLine":57,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":225,"column":13,"nodeType":"148","messageId":"149","endLine":225,"endColumn":16},{"ruleId":"139","severity":1,"message":"150","line":4,"column":1,"nodeType":"141","endLine":12,"endColumn":3},{"ruleId":"142","severity":1,"message":"151","line":48,"column":6,"nodeType":"144","endLine":48,"endColumn":15,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"153","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"154","line":2,"column":16,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},{"ruleId":"146","severity":1,"message":"153","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},{"ruleId":"146","severity":1,"message":"154","line":2,"column":16,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["157"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],"'Link' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"163","text":"164"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"165","text":"166"},[578,580],"[getCurrentProfile]",[1650,1659],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]